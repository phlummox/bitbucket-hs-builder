
# Do not choose a language; we provide our own build tools.
language: generic

env:
  global:
  - PATH="$HOME/.local/bin:$PATH"

# Caching so the next build will be fast too.
cache:
  directories:
  - "$HOME/.ghc"
  - "$HOME/.cabal"
  - "$HOME/.stack"

matrix:
  include:

  - env: OS=linux BUILD=stack STACK_VER="1.9.3" STACK_RESOLVER="lts-12" RELEASE="true"
    addons: {apt: {packages: [libgmp-dev], sources: [hvr-ghc]}}


before_install:
# Using compiler above sets CC to an invalid value, so unset it
- unset CC
- export PATH="/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:/opt/alex/$ALEXVER/bin:/opt/happy/$HAPPYVER/bin:$HOME/.cabal/bin:$PATH"

# default values for stack resolver, version, args
- |
  if [ -z "$STACK_RESOLVER" ] ; then
    export STACK_RESOLVER="lts-11"
  fi

  if [ -z "$STACK_VER" ] ; then
    export STACK_VER="1.9.3"
  fi

  export ARGS="--resolver $STACK_RESOLVER --stack-yaml stack-$STACK_RESOLVER.yaml"

  # only needed if we have special cabal
  # requirements. TODO: probably can delete
  # (need to remove all refs to it as well)
  if [ -z "$CABALARGS" ] ; then
    export CABALARGS=""
  fi

# set up build tools
- |
  printf '\n***before_install***\n'
  set -x
  pwd

  # set -e seems to cause stack setup to fail?
  set -u

  mkdir -p ~/.local/bin

  # always install stack. used for getting
  # a list of packages to build and their dirs

  export LINUX64_STACK="https://github.com/commercialhaskell/stack/releases/download/v${STACK_VER}/stack-${STACK_VER}-linux-x86_64.tar.gz"

  travis_retry curl -L "${LINUX64_STACK}" | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'

  stack --resolver $STACK_RESOLVER setup

  set +ux

- |
  printf '\n***show tool versions***\n'

  set -ex

  case "$BUILD" in
    stack)
      stack --version
      ;;
  esac

  set +ex

install:
- |
  printf '\n***install dependencies***\n'

  set -x

  case "$BUILD" in
    stack)
      # create stack yaml file if it doesn't exist
      if [ ! -f "stack-$STACK_RESOLVER.yaml" ] ; then
        stack --resolver $STACK_RESOLVER --no-terminal --install-ghc init
        mv stack.yaml "stack-$STACK_RESOLVER.yaml"
      fi

      stack $ARGS --no-terminal --install-ghc test $PKG_FLAGS --bench --only-dependencies
      ;;
  esac

  set +x


script:
- |
  printf '\n***script: do build and test***\n'

  set -x

  case "$BUILD" in
    stack)
      # run tests, build haddocks and any benchmarks
      stack $ARGS --no-terminal test --bench --no-run-benchmarks --haddock --no-haddock-deps
      stack $ARGS install
      ;;
  esac

  set +x

before_deploy:

- |
  printf '\n***before_deploy***\n'

  set -ux;

  # e.g. mypackage-0.1.2.0
  # "ls dependencies" avail from at least stack >= 1.9.3,
  # so should be fine.
  export PKGVER=$(stack $ARGS ls dependencies --depth 0 | sed 's/ /-/')
  export SRC_TGZ=$PKGVER.tar.gz

  ls -al;

  if [ ! -f "$SRC_TGZ" ] ; then
    stack $ARGS sdist;
    distdir=`stack $ARGS path --dist-dir`;
    cp $distdir/$SRC_TGZ .;
  fi
  ls -al "$SRC_TGZ"
  cp ~/.local/bin/bitbucket-builder .
  tar cf ${PKGVER}_linux_x86_64.tgz --gzip bitbucket-builder
  ls -al ${PKGVER}_linux_x86_64.tgz

  set +ux

deploy:
  provider: releases

  # travis lint warns skip_cleanup is deprecated,
  # but currently still seems to be necessary.
  skip_cleanup: true

  file:
  - "$SRC_TGZ"
  - "${PKGVER}_linux_x86_64.tgz"

  # NB: when creating api keys using the 'travis'
  # command-line tool:
  # Most of the online docco is out of date.
  # If the build is on travis-ci.com (not travis-ci.org),
  # you need:
  #    travis login --pro
  #    travis setup releases --force --pro
  # to get a key.
  # If on travis-ci.org, you don't need "--pro".

  api_key:
    secure: JOeBK57QRliwxuqJaiOw83SnKsEtB6cGCNYW3u5VRn3tJAx6iejzwsZTqIDT7RTLAWnbF8LZDnLbOVvISlHB9GuHErhF+N2lwB/GVVi6pUVM8fT3c4aR9etJjOv2r44MK7eUCzBkXFjjXMkNoUrOC5oxi85MZHLyEyYr1uyIwvasbcbc4J4cwjFoK/Ebei+Q93AdhVJvap4s94qolyMYikAOq+ZUpcCgkkCmgMpd5EfLrnsc74nzFI/OQ15OEvuIBPGsUhWryVhXG5qNYY1InG+j+pO9sYMx8sD2frnUxT7SlqSWzjs8KsVHQdm2Nw/2ZhWpObIA7rcQzE/YVqKaho4W+KLa2++RCwoC7zzbVxGqzFgJTwQexYj5CEHCJQgI1uN42fZkbf6dVAbq0GaonokEQjmEj1gVDjtDdYX0CvgNZFZ5ueUNLXllYrFu5n5PSdWxBZWiccJJUW02dQ6Aly9Jd2aKGbEsgixM7ZJLBOXz3ceP4h2ZVMPTSJiOZL50IsY+/CP5HsY6jsVGphQ8die1RURuqKt8QL8mfnG5Aujz71/786AOphYhHDY0Uzz3yAipagG8qQHgfkXFIkjflzHbEm06IIPvKffhOfWpTZAuT27Y8SGutIC8/uIJgC3a/kb1ULNThBAavunEP/iEFN0sO7BI6FcLrR0WANALKlc=
  on:
    tags: true
    all_branches: true
    repo: phlummox/bitbucket-hs-builder
    condition: $RELEASE = true
